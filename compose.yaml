services:
  eureka-service:
    container_name: eureka-service
    build:
      context: ./eureka-service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"

  cloud-gateway:
    env_file:
      - .env
    build:
      context: ./cloud-gateway
      dockerfile: Dockerfile
    container_name: cloud-gateway
    ports:
      - "8080:8080"
    depends_on:
      - eureka-service
      - resource-service
      - song-service

  resource-db:
    image: postgres:17-alpine
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_RESOURCE_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./init-scripts/resource-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"  # Maps container port 5432 to host port 5432

  song-db:
    image: postgres:17-alpine
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_SONG_DB}
      POSTGRES_USER: ${POSTGRES_USER}  # Default, can be omitted if unchanged
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./init-scripts/song-db:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"  # Maps container port 5432 to host port 5433 (to avoid conflict)

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: gresau/localstack-persist    # Instead of localstack/localstack, to have persisted resources without pro subscription
    ports:
      - "127.0.0.1:4566:4566"           # LocalStack gateway
      - "127.0.0.1:4510-4559:4510-4559" # External services port range
    environment:
      - DEBUG=${DEBUG-}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=eu-central-2
      - SERVICES=s3
      - PERSIST_DEFAULT=0
      - PERSIST_S3=1
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./my-localstack-data:/persisted-data"

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    env_file:
      - .env
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  resource-service:
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: ${RESOURCE_DB_URL}
    build:
      context: ./resource-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    healthcheck:
      test: "wget -T5 -qO- http://localhost:8081/actuator/health | grep UP || exit 1"
      interval: 30s
      retries: 3
      start_period: 1m
      timeout: 10s
    depends_on:
      - eureka-service
      - resource-db
      - localstack
      - rabbitmq

  resource-processor:
    links:
      - resource-service
    env_file:
      - .env
    build:
      context: ./resource-processor
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    healthcheck:
      test: "wget -T5 -qO- http://localhost:8082/actuator/health | grep UP || exit 1"
      interval: 30s
      retries: 3
      start_period: 120s
      timeout: 10s
    depends_on:
      - rabbitmq
      - resource-service
      - song-service

  song-service:
    deploy:
      replicas: 2
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: ${SONG_DB_URL}
    build:
      context: ./song-service
      dockerfile: Dockerfile
    ports:
      - "8083-8084:8083"
    healthcheck:
      test: "curl --fail --silent localhost:8083/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      - eureka-service
      - song-db
